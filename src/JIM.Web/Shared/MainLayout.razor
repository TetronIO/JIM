@inherits LayoutComponentBase
@using MudBlazor.Utilities
<MudThemeProvider @bind-IsDarkMode="@IsDarkMode" Theme="_theme" @ref="@_mudThemeProvider" />
<MudDialogProvider />
<MudSnackbarProvider />

<PageTitle>JIM</PageTitle>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h6" Class="header-title">Junctional Identity Manager</MudText>
        <MudSpacer />
        <MudTooltip Text="@(IsDarkMode ? _lightModeText : _darkModeText)">
            <MudToggleIconButton @bind-Toggled="@IsDarkMode"
                                 Icon="@Icons.Material.Filled.WbSunny" Color="@Color.Inherit" Title="Off"
                                 ToggledIcon="@Icons.Material.Filled.DarkMode" ToggledColor="@Color.Inherit" ToggledTitle="On" />
        </MudTooltip>
    </MudAppBar>
    <MudDrawer @bind-Open="@IsDrawerOpen" ClipMode="DrawerClipMode.Always" Elevation="0">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pt-5 pb-5">
            @Body

            <MudText Align="Align.Center" Typo="Typo.body2" Class="mt-5">
                &copy; 2023 Tetron Limited
            </MudText>

        </MudContainer>
    </MudMainContent>
</MudLayout>

@code
{
    private MudTheme _theme = new()
        {
            Typography = new Typography()
            {
                Default = new Default()
                {
                    FontFamily = new[] {
                        "-apple-system",
                        "Segoe UI Variable Display",
                        "Roboto",
                        "Helvetica Neue",
                        "Arial"
                    },
                    FontWeight = 400,
                    FontSize = "16px"
                }
            },
            Palette = new Palette()
            {
                AppbarBackground = new MudColor("rgb(60,148,255)"),
                Background = new MudColor("#f6f9fc"),
                DrawerBackground = new MudColor("#eef2f6"),
                Primary = new MudColor("rgb(60,148,255)")
            },
            PaletteDark = new Palette()
            {
                ActionDefault = new MudColor("#acb0b3"), // pagination arrow link text
                ActionDisabled = new MudColor("#2c3441"),
                AppbarBackground = new MudColor("#1a273b"),
                Background = new MudColor("#0e1420"),
                Divider = new MudColor("#292838ff"),
                DrawerBackground = new MudColor("#111926"),
                DrawerIcon = new MudColor("#46545f"),
                DrawerText = new MudColor("#acb0b3"),
                LinesDefault = new MudColor("#2a303c"),
                LinesInputs = new MudColor("#595d68"),
                Primary = new MudColor("rgb(60,148,255)"),
                Surface = new MudColor("#121826"),
                TableHover = new MudColor("#151b2b"),
                TableLines = new MudColor("#2a303c"),
                TextDisabled = new MudColor("#535861"),
                TextPrimary = new MudColor("#acb0b3"),
                TextSecondary = new MudColor("#515560")

                // experiments, trying to find what controls the colour of things...
                //BackgroundGrey = new MudColor("#f73838"), // red
                //ActionDisabledBackground = new MudColor("#f73838"), // red

                //Dark = new MudColor("#f73838"), // red
                //Black = new MudColor("#f73838"), // red
                //Divider = new MudColor("#f73838"), // red
                //DividerLight = new MudColor("#f73838"), // red                                

                //PrimaryContrastText = new MudColor("#f73838"), // red
                //TextSecondary=new MudColor("#f73838"), // red
                //Secondary = new MudColor("#f73838"), // red
                //SecondaryContrastText = new MudColor("#f73838"), // red
                //GrayDefault = "#f73838", // red
                //HoverOpacity = 0.40
            },
            LayoutProperties = new LayoutProperties()
            {
                DefaultBorderRadius = "4px"
            }
        };

    private MudThemeProvider? _mudThemeProvider;
    private string _lightModeText = "Light Mode";
    private string _darkModeText = "Dark Mode";

    private bool IsDrawerOpen { get; set; } = true;
    private bool IsDarkMode { get; set; }
    private bool DarkModeControlText { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && _mudThemeProvider != null)
        {
            IsDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    void DrawerToggle()
    {
        IsDrawerOpen = !IsDrawerOpen;
    }
}
