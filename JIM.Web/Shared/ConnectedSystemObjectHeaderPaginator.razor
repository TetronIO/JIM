@using JIM.Models.Staging.DTOs
@using JIM.Models.Staging;
@using JIM.Models.Utility
@using JIM.Models.Enums
@inject NavigationManager NavManager

@if (_totalPages > 1 && _pageNumbers != null)
{
    <MudPagination 
        ShowFirstButton="true" 
        ShowLastButton="true" 
        Count="@Results.TotalPages"
        ControlButtonClicked="ControlButtonClickedHandler"
        SelectedChanged="SelectedChangedHandler"
        Rectangular="true"
        DropShadow="false"/>
}

@code {
    [Parameter]
    [EditorRequired]
    public PagedResultSet<ConnectedSystemObjectHeader> Results { get; set; } = null!;

    string _path = null!;
    const int MaxPagesToDisplayInNav = 4;
    int _totalPages;
    int _numPagesToDisplayInNav;
    int[]? _pageNumbers;

    protected override void OnParametersSet()
    {
        if (Results == null)
            return;

        var uri = new Uri(NavManager.Uri);
        _path = uri.PathAndQuery.Contains("?") ? uri.PathAndQuery.Substring(0, uri.PathAndQuery.IndexOf("?", StringComparison.Ordinal)) : uri.PathAndQuery;
        _totalPages = Results.TotalPages;
        _numPagesToDisplayInNav = _totalPages <= MaxPagesToDisplayInNav ? _totalPages : MaxPagesToDisplayInNav;
        _pageNumbers = Results.GetNavigationPageNumbers(_numPagesToDisplayInNav);
    }

    private void ControlButtonClickedHandler(Page page)
    {
        switch (page)
        {
            case Page.First:
                NavManager.NavigateTo(Results.BuildTagQueryString(1, _path));
                break;
            case Page.Last:
                NavManager.NavigateTo(Results.BuildTagQueryString(Results.TotalPages, _path));
                break;
            case Page.Next:
                NavManager.NavigateTo(Results.BuildTagQueryString(Results.CurrentPage + 1, _path));
                break;
            case Page.Previous:
                NavManager.NavigateTo(Results.BuildTagQueryString(Results.CurrentPage - 1, _path));
                break;
            default:
                throw new ArgumentOutOfRangeException(nameof(page), page, null);
        }
    }

    private void SelectedChangedHandler(int pageNumber)
    {
        NavManager.NavigateTo(Results.BuildTagQueryString(pageNumber, _path));
    }
}
