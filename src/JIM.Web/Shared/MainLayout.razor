@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="@IsDarkMode" Theme="_theme" @ref="@_mudThemeProvider" />
<MudDialogProvider />
<MudSnackbarProvider />

<PageTitle>JIM</PageTitle>

<MudLayout>
    <MudAppBar Elevation=" 1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        Junctional Identity Manager
        <MudSpacer />
        <MudTooltip Text="@(IsDarkMode ? _lightModeText : _darkModeText)">
            <MudToggleIconButton @bind-Toggled="@IsDarkMode"
                                 Icon="@Icons.Material.Filled.WbSunny" Color="@Color.Inherit" Title="Off"
                                 ToggledIcon="@Icons.Material.Filled.DarkMode" ToggledColor="@Color.Inherit" ToggledTitle="On" />
        </MudTooltip>
    </MudAppBar>
    <MudDrawer @bind-Open="@IsDrawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pt-5 pb-5">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code
{
    private MudTheme _theme = new()
        {
            Typography = new Typography()
            {
                Default = new Default()
                {
                    FontFamily = new[] {
                        "-apple-system",
                        "Segoe UI Variable Display",
                        "Roboto",
                        "Helvetica Neue",
                        "Arial"
                    }
                }
            }
        };

    private MudThemeProvider? _mudThemeProvider;
    private string _lightModeText = "Light Mode";
    private string _darkModeText = "Dark Mode";

    private bool IsDrawerOpen { get; set; } = true;
    private bool IsDarkMode { get; set; }
    private bool DarkModeControlText { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && _mudThemeProvider != null)
        {
            IsDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    void DrawerToggle()
    {
        IsDrawerOpen = !IsDrawerOpen;
    }
}
