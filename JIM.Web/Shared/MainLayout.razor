@inherits LayoutComponentBase
@using MudBlazor.Utilities
<MudThemeProvider @bind-IsDarkMode="@IsDarkMode" Theme="_theme" @ref="@_mudThemeProvider" />
<MudDialogProvider />
<MudSnackbarProvider />

<PageTitle>JIM</PageTitle>

<MudLayout Style="Position: static">

    @* <MudDrawer @bind-Open="@IsDrawerOpen" ClipMode="DrawerClipMode.Always" Elevation="0"> *@
    @*     <NavMenu/> *@
    @* </MudDrawer> *@

    <MudDrawerContainer Class="mud-height-full">
        <MudDrawer @bind-Open="@_open" Fixed="false" Elevation="1" Variant="@DrawerVariant.Mini" OpenMiniOnHover="true">
            @* <MudNavMenu> *@
            @*     <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Store">Store</MudNavLink> *@
            @*     <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.LibraryBooks">Library</MudNavLink> *@
            @*     <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Group">Community</MudNavLink> *@
            @* </MudNavMenu> *@
            
            <MudImage Src="/images/jim-logo.png" Width="28" Class="mt-4 ms-4 mb-3" Alt="JIM Logo"></MudImage>
            <NavMenu DrawerOpen="_open"/>
            
           @* <MudNavMenu> *@
           @*      <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink> *@
           @* *@
           @*      <MudNavGroup Title="Users" Expanded="@_open" Icon="@Icons.Material.Filled.Person" HideExpandIcon="@(!_open)"> *@
           @*          <MudNavLink Href="/t/users" Match="NavLinkMatch.All">All Users</MudNavLink> *@
           @*          <MudNavLink Href="/t/users/s/people" Match="NavLinkMatch.Prefix">People</MudNavLink> *@
           @*          <MudNavLink Href="/t/users/s/service-principals" Match="NavLinkMatch.Prefix">Service Principals</MudNavLink> *@
           @*      </MudNavGroup> *@
           @* *@
           @* *@
           @*      <MudNavLink Href="/t/groups" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Groups">Groups</MudNavLink> *@
           @*      <MudNavLink Href="/activity" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.DynamicFeed">Activity</MudNavLink> *@
           @*      <AuthorizeView Roles="Administrators"> *@
           @*          <MudNavLink Href="/dashboard/daily" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink> *@
           @*          <MudNavLink Href="/admin/operations" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Settings">Admin</MudNavLink> *@
           @*      </AuthorizeView> *@
           @*  </MudNavMenu>  *@

        </MudDrawer>

        <MudMainContent>
            <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pt-5 pb-5">

                @* <div class="d-flex justify-center align-center"> *@
                @*     <MudButton OnClick="@ToggleDrawer" Color="Color.Primary">Toggle</MudButton> *@
                @* </div> *@

                @Body

                <MudText Align="Align.Center" Typo="Typo.body2" Class="mt-5 mud-text-secondary">
                    &copy; @DateTime.UtcNow.Year Tetron
                </MudText>

                <MudText Align="Align.Center">
                    <MudLink Href="https://github.com/TetronIO/JIM">
                        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" aria-label="See us on GitHub" Style="color:#515560;"/>
                    </MudLink>
                </MudText>

            </MudContainer>
        </MudMainContent>

    </MudDrawerContainer>

</MudLayout>

@code
{
    private readonly MudTheme _theme = new()
    {
        Typography = new Typography()
        {
            Default = new Default()
            {
                FontFamily = new[] {
                    "-apple-system",
                    "Segoe UI Variable Display",
                    "Roboto",
                    "Helvetica Neue",
                    "Arial"
                },
                FontWeight = 400,
                FontSize = "16px"
            }
        },
        Palette = new PaletteLight()
        {
            AppbarBackground = new MudColor("rgb(60,148,255)"),
            Background = new MudColor("#f6f9fc"),
            DrawerBackground = new MudColor("#eef2f6"),
            Primary = new MudColor("rgb(60,148,255)")
        },
        PaletteDark = new PaletteDark()
        {
            ActionDefault = new MudColor("#acb0b3"), // pagination arrow link text
            // ActionDisabled = new MudColor("#2c3441"), // disabled button
            AppbarBackground = new MudColor("#1a273b"),
            Background = new MudColor("#0e1420"),
            Divider = new MudColor("#292838ff"),
            DrawerBackground = new MudColor("#111926"),
            DrawerIcon = new MudColor("#46545f"),
            DrawerText = new MudColor("#acb0b3"),
            LinesDefault = new MudColor("#2a303c"),
            LinesInputs = new MudColor("#595d68"),
            Primary = new MudColor("rgb(60,148,255)"),
            Surface = new MudColor("#121826"),
            TableHover = new MudColor("#151b2b"),
            TableLines = new MudColor("#2a303c"),
            TextDisabled = new MudColor("#535861"),
            TextPrimary = new MudColor("#acb0b3"),
            TextSecondary = new MudColor("#515560")
        },
        LayoutProperties = new LayoutProperties()
        {
            DefaultBorderRadius = "4px"
        }
    };

    private MudThemeProvider? _mudThemeProvider;
    private const string LightModeText = "Light Mode";
    private const string DarkModeText = "Dark Mode";
    private bool IsDrawerOpen { get; set; } = true;
    private bool IsDarkMode { get; set; }
    
    private bool _open = false;
    private void ToggleDrawer()
    {
        _open = !_open;
    } 

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && _mudThemeProvider != null)
        {
            IsDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    void DrawerToggle()
    {
        IsDrawerOpen = !IsDrawerOpen;
    }
}
