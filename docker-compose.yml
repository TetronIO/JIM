version: '3.4'

services:

  jim.web:
    container_name: jim.web
    image: ${DOCKER_REGISTRY-}jim.web
    restart: always
    environment:
     - LOGGING_LEVEL=Verbose
     - LOGGING_PATH=/var/log/jim
     - ENABLE_REQUEST_LOGGING=true
     - DB_HOSTNAME=JIM.Database
     - DB_NAME=${DB_NAME}
     - DB_USERNAME=${DB_USERNAME}
     - DB_PASSWORD=${DB_PASSWORD}
     - DB_LOG_SENSITIVE_INFO=${DB_LOG_SENSITIVE_INFO}
     - SSO_AUTHORITY=${SSO_AUTHORITY}
     - SSO_CLIENT_ID=${SSO_CLIENT_ID}
     - SSO_SECRET=${SSO_SECRET}
     - SSO_UNIQUE_IDENTIFIER_CLAIM_TYPE=${SSO_UNIQUE_IDENTIFIER_CLAIM_TYPE}
     - SSO_UNIQUE_IDENTIFIER_METAVERSE_ATTRIBUTE_NAME=${SSO_UNIQUE_IDENTIFIER_METAVERSE_ATTRIBUTE_NAME}
     - SSO_UNIQUE_IDENTIFIER_INITIAL_ADMIN_CLAIM_VALUE=${SSO_UNIQUE_IDENTIFIER_INITIAL_ADMIN_CLAIM_VALUE}
    volumes:
      - jim-logs-volume:/var/log/jim
      - "c:/temp/jim-connector-files:/var/connector-files"
    cap_add:
      - DAC_READ_SEARCH
      - SYS_ADMIN
    build:
      context: .
      dockerfile: JIM.Web/Dockerfile
    depends_on:
      - jim.database
      - jim.worker
      - jim.api
    networks:
      - jim-network

  jim.api:
    container_name: jim.api
    image: ${DOCKER_REGISTRY-}jim.api
    restart: always
    environment:
     - LOGGING_LEVEL=Verbose
     - LOGGING_PATH=/var/log/jim
     - ENABLE_REQUEST_LOGGING=true
     - DB_HOSTNAME=JIM.Database
     - DB_NAME=${DB_NAME}
     - DB_USERNAME=${DB_USERNAME}
     - DB_PASSWORD=${DB_PASSWORD}
     - DB_LOG_SENSITIVE_INFO=${DB_LOG_SENSITIVE_INFO}
     - SSO_AUTHORITY=${SSO_AUTHORITY}
     - SSO_CLIENT_ID=${SSO_CLIENT_ID}
     - SSO_SECRET=${SSO_SECRET}
     - SSO_UNIQUE_IDENTIFIER_CLAIM_TYPE=${SSO_UNIQUE_IDENTIFIER_CLAIM_TYPE}
     - SSO_UNIQUE_IDENTIFIER_METAVERSE_ATTRIBUTE_NAME=${SSO_UNIQUE_IDENTIFIER_METAVERSE_ATTRIBUTE_NAME}
     - SSO_UNIQUE_IDENTIFIER_INITIAL_ADMIN_CLAIM_VALUE=${SSO_UNIQUE_IDENTIFIER_INITIAL_ADMIN_CLAIM_VALUE}
    volumes:
      - jim-logs-volume:/var/log/jim
    build:
      context: .
      dockerfile: JIM.Api/Dockerfile
    depends_on:
      - jim.database
      - jim.worker
    networks:
      - jim-network

  jim.worker:
    container_name: jim.worker
    image: ${DOCKER_REGISTRY-}jim.worker
    restart: always
    environment:
     - LOGGING_LEVEL=Verbose
     - LOGGING_PATH=/var/log/jim
     - DB_HOSTNAME=JIM.Database
     - DB_NAME=${DB_NAME}
     - DB_USERNAME=${DB_USERNAME}
     - DB_PASSWORD=${DB_PASSWORD}
     - DB_LOG_SENSITIVE_INFO=${DB_LOG_SENSITIVE_INFO}
    volumes:
      - jim-logs-volume:/var/log/jim
      - "c:/temp/jim-connector-files:/var/connector-files"
    build:
      context: .
      dockerfile: JIM.Worker/Dockerfile
    depends_on:
      - jim.database
    networks:
      - jim-network

  jim.scheduler:
    container_name: jim.scheduler
    image: ${DOCKER_REGISTRY-}jim.scheduler
    restart: always
    environment:
     - LOGGING_LEVEL=Error
     - LOGGING_PATH=/var/log/jim
     - DB_HOSTNAME=JIM.Database
     - DB_NAME=${DB_NAME}
     - DB_USERNAME=${DB_USERNAME}
     - DB_PASSWORD=${DB_PASSWORD}
     - DB_LOG_SENSITIVE_INFO=${DB_LOG_SENSITIVE_INFO}
    volumes:
      - jim-logs-volume:/var/log/jim
    build:
      context: .
      dockerfile: JIM.Scheduler/Dockerfile
    depends_on:
      - jim.database
      - jim.worker
    networks:
      - jim-network
  
  adminer:
    container_name: jim.adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - jim.database
    networks:
      - jim-network

  jim.database:
    container_name: jim.database
    image: postgres
    # customise the following command parameter values for your environment: https://pgtune.leopard.in.ua/
    # the default values are for a 64gb windows/32gb wsl 16 core ssd system
    command: postgres -c max_connections=200 -c shared_buffers=8GB -c effective_cache_size=24GB -c maintenance_work_mem=2GB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB -c default_statistics_target=100 -c random_page_cost=1.1 -c effective_io_concurrency=200 -c work_mem=10485kB -c min_wal_size=1GB -c max_wal_size=4GB -c max_worker_processes=16 -c max_parallel_workers_per_gather=4 -c max_parallel_workers=16 -c max_parallel_maintenance_workers=4
    restart: always
    volumes:
      - jim-db-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}      
    networks: 
      - jim-network

networks:
  jim-network:
    driver: bridge

volumes:
  jim-db-volume:
    name: jim-db-volume
  jim-logs-volume:
    name: jim-logs-volume