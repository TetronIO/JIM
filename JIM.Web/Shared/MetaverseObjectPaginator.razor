@using JIM.Models.Core
@using JIM.Models.Utility
@inject NavigationManager NavManager

@if (_totalPages > 1 && _pageNumbers != null)
{
    <div class="mt-3">
        <nav aria-label="Pages">
            <ul class="pagination justify-content-center">
                @if (Results.CurrentPage > 1)
                {
                    <li class="page-item"><a class="page-link" href="@Results.BuildTagQueryString(Results.CurrentPage - 1, _path)">Previous</a></li>
                }

                @foreach (var p in _pageNumbers)
                {
                    <li class="page-item@(p == Results.CurrentPage ? " active":"")"><a class="page-link" href="@Results.BuildTagQueryString(p, _path)">@p</a></li>
                }

                @if (Results.CurrentPage < _totalPages)
                {
                    <li class="page-item"><a class="page-link" href="@Results.BuildTagQueryString(Results.CurrentPage + 1, _path)">Next</a></li>
                }
                <li class="page-item disabled">
                    <span class="page-link">
                        Page @Results.CurrentPage of @Results.TotalPages
                    </span>
                </li>
            </ul>
        </nav>
    </div>
}

@code {
    [Parameter]
    [EditorRequired]
    public PagedResultSet<MetaverseObject> Results { get; set; } = null!;

    string _path = null!;
    const int MaxPagesToDisplayInNav = 4;
    int _totalPages;
    int _numPagesToDisplayInNav;
    int[]? _pageNumbers;

    protected override void OnParametersSet()
    {
        if (Results == null)
            return;

        var uri = new Uri(NavManager.Uri);
        _path = uri.PathAndQuery.Contains("?") ? uri.PathAndQuery.Substring(0, uri.PathAndQuery.IndexOf("?", StringComparison.Ordinal)) : uri.PathAndQuery;
        _totalPages = Results.TotalPages;
        _numPagesToDisplayInNav = _totalPages <= MaxPagesToDisplayInNav ? _totalPages : MaxPagesToDisplayInNav;
        _pageNumbers = Results.GetNavigationPageNumbers(_numPagesToDisplayInNav);
    }
}
