@page "/t/{TypeNameUrlParam}"
@page "/t/{TypeNameUrlParam}/s/{PredefinedSearchUri}"
@attribute [Authorize(Roles = "Users")]
@using JIM.Application
@using JIM.Models.Core
@using JIM.Models.Core.Dto
@using JIM.Models.Search
@using JIM.Models.Utility
@inject JimApplication Jim
@inject NavigationManager NavManager

<PageTitle>@MetaverseObjectType?.Name</PageTitle>
<h1>@(MetaverseObjectType?.Name)</h1>
<p class="light">
    Search, or browse for @MetaverseObjectType?.Name
</p>

@if (PredefinedSearch != null)
{
    <div>
        <MetaverseObjectHeaderPaginator Results="@MetaverseObjectHeaders" />
    </div>

    <div class="box mt-3">
        <table class="table mt-2">
            <thead>
                <tr>
                    @foreach (MetaverseAttribute ma in PredefinedSearch.MetaverseAttributes)
                    {
                        <th scope="col">@ma.Name</th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (MetaverseObjectHeaders != null && MetaverseObjectHeaders.Results.Count > 0)
                {
                    foreach (var mo in MetaverseObjectHeaders.Results)
                    {
                        <tr>
                            <td><a href="/t/@(MetaverseObjectType?.Name.ToLower())/v/@mo.Id">@mo.GetAttributeValue(Constants.BuiltInAttributes.DisplayName)?.StringValue</a></td>
                            @foreach (var ma in PredefinedSearch.MetaverseAttributes.Where(q => q.Name != Constants.BuiltInAttributes.DisplayName))
                            {
                                <td>@mo.GetAttributeValue(ma.Name)?.StringValue</td>
                            }
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="@PredefinedSearch.MetaverseAttributes.Count" class="light text-center">No results</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="mt-3">
        <MetaverseObjectHeaderPaginator Results="@MetaverseObjectHeaders" />
    </div>
}
else
{
    <b>Please create a default Predefined Search for this Metaverse Object Type</b>
}

@code {
    [Parameter]
    public string TypeNameUrlParam { get; set; }

    [Parameter]
    public string? PredefinedSearchUri { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "p")]
    public int? Page { get; set; }

    private PagedResultSet<MetaverseObjectHeader>? MetaverseObjectHeaders { get; set; }
    private MetaverseObjectType? MetaverseObjectType { get; set; }
    private PredefinedSearch? PredefinedSearch { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (Page == null || Page < 1)
            Page = 1;

        var typeName = Utilities.ConvertFromUrlParam(TypeNameUrlParam);
        MetaverseObjectType = await Jim.Metaverse.GetMetaverseObjectTypeAsync(typeName, false);
        if (MetaverseObjectType == null)
        {
            NavManager.NavigateTo("/");
            return;
        }

        // is there a default predefined search for this object type?
        PredefinedSearch = await Jim.Search.GetPredefinedSearchAsync(MetaverseObjectType);
        if (PredefinedSearch != null)
        {
            // get a page of results for the metaverse objects matching this type...
            MetaverseObjectHeaders = await Jim.Metaverse.GetMetaverseObjectsOfTypeAsync(PredefinedSearch, Page.Value, 20, 500);
        }
    }
}