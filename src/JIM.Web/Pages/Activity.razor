@page "/activity"
@attribute [Authorize(Roles = "Users")]
@using JIM.Application
@using JIM.Models.Activities
@using JIM.Models.Utility;
@using JIM.Utilities;
@inject JimApplication Jim

<PageTitle>Activity</PageTitle>

<MudText Typo="Typo.h4">Activity</MudText>
<MudText Typo="Typo.subtitle1">
    See what JIM has been doing here. Everything that happens in JIM is tracked by an Activity. 
    Activities can be initiated by an individual, or by the system via automation in response to synchronisation schedules, workflows, etc.
</MudText>

@if (activities != null)
{
    <ActivityItemPaginator Results="@activities" />

    <MudTable T="JIM.Models.Activities.Activity" Items="@activities.Results" Hover="true" Dense="true" Breakpoint="Breakpoint.Sm" Class="mt-5" Outlined="true" Elevation="0">
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Type</MudTh>
            <MudTh>Operation</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Created</MudTh>
            <MudTh>Initiated By</MudTh>
            <MudTh>Status</MudTh>
            <MudTh>Completion Time</MudTh>
            <MudTh>Error</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Type">@context.TargetType.ToString().SplitOnCapitalLetters()</MudTd>
            <MudTd DataLabel="Operation">@context.TargetOperationType</MudTd>
            <MudTd DataLabel="Name">@context.TargetName</MudTd>
            <MudTd DataLabel="Created">@context.Created</MudTd>
            <MudTd DataLabel="Initiated By">
                @if (context.InitiatedBy != null)
                {
                    <MudLink Href="@Utilities.GetMetaverseObjectHref(context.InitiatedBy)">@Utilities.GetMetaverseObjectHrefText(context.InitiatedBy)</MudLink>
                }
                else if (!string.IsNullOrEmpty(context.InitiatedByName))
                {
                    @context.InitiatedByName
                }
            </MudTd>
            <MudTd DataLabel="Status">@context.Status.ToString().SplitOnCapitalLetters()</MudTd>
            <MudTd DataLabel="Completion Time">@context.CompletionTime</MudTd>
            <MudTd DataLabel="Error">@(string.IsNullOrEmpty(context.ErrorMessage) ? "-" : context.ErrorMessage)</MudTd>
        </RowTemplate>
        <NoRecordsContent>
            There is no activity to show yet.
        </NoRecordsContent>
    </MudTable>
}

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "p")]
    public int? Page { get; set; }
    
    private PagedResultSet<JIM.Models.Activities.Activity>? activities;

    protected override async Task OnParametersSetAsync()
    {
        if (Page == null || Page < 1)
            Page = 1;

        activities = await Jim.Activities.GetActivitiesAsync(Page.Value, 20, 500);
    }
}