@page "/admin/example-data"
@attribute [Authorize(Roles = "Administrators")]
@using JIM.Application
@using JIM.Models.DataGeneration.DTOs
@inject JimApplication Jim

<PageTitle>Example Data Templates</PageTitle>
<MudText Typo="Typo.h4"><span class="mud-secondary-text">Example Data:</span> Templates</MudText>
<MudBreadcrumbs Items="_breadcrumbs" Class="ps-0"></MudBreadcrumbs>
<MudText Typo="Typo.subtitle1" Class="mud-text-secondary">
    You can quickly populate JIM with example data, as a way to demo, or prototype new features without needing to fuly
    configure JIM with Connected Systems, Sync Rules and wait for data to be imported and synchronised etc.   
</MudText>
<MudText Typo="Typo.subtitle1" Class="mud-text-secondary mt-2">
    Templates define example data to be created in JIM. They consist of one or more object types, with data sets being used to generate values for the object attributes.
</MudText>

<MudPaper Elevation="0" Class="mt-5" Outlined="true">
    <MudToolBar>
        <MudButton Href="/admin/example-data" Color="Color.Primary" DropShadow="false" Disabled="true">Templates</MudButton>
        <MudButton Href="/admin/example-data/datasets" Color="Color.Primary" DropShadow="false">Data Sets</MudButton>
    </MudToolBar>
</MudPaper>

<MudTable Items="@_templates" Hover="true" Breakpoint="Breakpoint.Sm" Class="mt-5" SortLabel="Sort By" Outlined="true" Elevation="0">
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<DataGenerationTemplateHeader, object>(x => x.Name)">Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<DataGenerationTemplateHeader, object>(x => x.BuiltIn)">Built-in?</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<DataGenerationTemplateHeader, object>(x => x.Created)">Created</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name"><MudLink Href="@("admin/example-data/templates/"+context.Id)">@context.Name</MudLink></MudTd>
        <MudTd DataLabel="Built-in?">@(context.BuiltIn ? "Yes" : "No")</MudTd>
        <MudTd DataLabel="Created">@context.Created</MudTd>
    </RowTemplate>
</MudTable>

@code {
    private List<DataGenerationTemplateHeader>? _templates;

    private readonly List<BreadcrumbItem> _breadcrumbs = new List<BreadcrumbItem>
    {
        new("Home", href: "/", icon: Icons.Material.Filled.Home),
        new("Example Data", href: null, disabled: true)
    };

    protected override async Task OnInitializedAsync()
    {
        _templates = await Jim.DataGeneration.GetTemplateHeadersAsync();
    }
}