@page "/admin/connected-systems/{CsId:int}/objects/{CsoId}"
@attribute [Authorize(Roles = "Administrators")]
@using JIM.Application
@using JIM.Models.Staging
@using JIM.Models.Staging.DTOs
@using JIM.Utilities;
@inject JimApplication Jim
@inject NavigationManager NavManager

<PageTitle>Connected System Object: @(ConnectedSystemObject != null ? ConnectedSystemObject.Id : null)</PageTitle>
<MudText Typo="Typo.h4"><span class="mud-secondary-text">Connected System Object:</span> @(ConnectedSystemObject != null ? ConnectedSystemObject.Id : null)</MudText>
<MudBreadcrumbs Items="Breadcrumbs" Class="ps-0"></MudBreadcrumbs>

@if (ConnectedSystemHeader != null && ConnectedSystemObject != null)
{
    <MudStack Class="mt-5 mb-5">

        <MudPaper Class="pa-5" Outlined="true">
            <MudText Typo="Typo.overline">Connected System:</MudText>
            <MudText><MudLink Href="@Utilities.GetConnectedSystemHref(ConnectedSystemHeader)" Typo="Typo.h5">@ConnectedSystemHeader.Name</MudLink></MudText>
        </MudPaper>

        <MudPaper Class="pa-5" Outlined="true">
            <MudTooltip Text="A JIM-generated value that is used internally to identify the Connected System Object" Arrow="true" Placement="Placement.Right"><MudText Typo="Typo.overline" Style="@($"color:{Colors.Grey.Darken3};")">Internal Id:</MudText></MudTooltip>
            <MudText Style="@($"color:{Colors.Grey.Darken3};")">@ConnectedSystemObject.Id</MudText>

            @if (ExternalIdAttributeValue != null)
            {
                <br />
                <MudTooltip Text="The immutable unique identifier for the object in the Connected System. Typically generated by the external system" Arrow="true" Placement="Placement.Right"><MudText Typo="Typo.overline">External Id (<span class="mud-secondary-text">@ExternalIdAttributeValue.Attribute.Name</span>):</MudText></MudTooltip>
                <MudText>@ExternalIdAttributeValue</MudText>
            }

            @if (SecondaryExternalIdAttributeValue != null)
            {
                <br />
                <MudTooltip Text="Some external systems, such as LDAP directories use an additional attribute to identify objects when referencing them" Arrow="true" Placement="Placement.Right"><MudText Typo="Typo.overline">Secondary External Id (<span class="mud-secondary-text">@SecondaryExternalIdAttributeValue.Attribute.Name</span>):</MudText></MudTooltip>
                <MudText>@SecondaryExternalIdAttributeValue</MudText>
            }

        </MudPaper>
    </MudStack>
}

@code {
    /// <summary>
    /// Connected System Id.
    /// </summary>
    [Parameter]
    public int CsId { get; set; }

    /// <summary>
    /// Connected System Object Id.
    /// </summary>
    [Parameter]
    public string CsoId { get; set; } = null!;

    private ConnectedSystemHeader? ConnectedSystemHeader { get; set; }

    private ConnectedSystemObject? ConnectedSystemObject { get; set; }

    private ConnectedSystemObjectAttributeValue? ExternalIdAttributeValue { get; set; }

    private ConnectedSystemObjectAttributeValue? SecondaryExternalIdAttributeValue { get; set; }

    private List<BreadcrumbItem> Breadcrumbs { get; set; } = null!;

    protected override async Task OnParametersSetAsync()
    {
        ConnectedSystemHeader = await Jim.ConnectedSystems.GetConnectedSystemHeaderAsync(CsId);
        if (ConnectedSystemHeader == null)
        {
            // ConnectedSystem not found, redirect to the Connected Systems index page
            NavManager.NavigateTo($"/admin/connected-systems/");
            return;
        }

        var csoIdValid = Guid.TryParse(CsoId, out Guid connectedSystemObjectId);
        if (!csoIdValid)
        {
            NavManager.NavigateTo(Utilities.GetConnectedSystemObjectsHref(CsId));
            return;
        }

        ConnectedSystemObject = await Jim.ConnectedSystems.GetConnectedSystemObjectAsync(CsId, connectedSystemObjectId);
        if (ConnectedSystemObject == null)
        {
            // ConnectedSystemObject not found, redirect to Connected System Objects index page
            NavManager.NavigateTo(Utilities.GetConnectedSystemObjectsHref(CsId));
            return;
        }

        Breadcrumbs = new List<BreadcrumbItem>
        {
            new BreadcrumbItem("Home", href: "/", icon: Icons.Material.Filled.Home),
            new BreadcrumbItem("Connected Systems", href: "/admin/connected-systems/"),
            new BreadcrumbItem(ConnectedSystemHeader.Name, href: Utilities.GetConnectedSystemHref(ConnectedSystemHeader)),
            new BreadcrumbItem("Objects", href: Utilities.GetConnectedSystemObjectsHref(ConnectedSystemHeader)),
            new BreadcrumbItem(CsoId.ToString(), href: null, disabled: true)
        };

        ExternalIdAttributeValue = ConnectedSystemObject.GetExternalIdAttributeValue();
        SecondaryExternalIdAttributeValue = ConnectedSystemObject.GetSecondaryExternalIdAttributeValue();
    }
}
