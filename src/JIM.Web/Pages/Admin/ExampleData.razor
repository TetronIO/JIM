@page "/admin/example-data"
@attribute [Authorize(Roles = "Administrators")]
@using JIM.Application
@using JIM.Models.DataGeneration
@using JIM.Models.DataGeneration.Dto
@inject JimApplication Jim

<PageTitle>Example Data Templates</PageTitle>
<h1>Example Data Templates</h1>
<p class="light">
    You can quickly populate JIM with example data, as a way to demo, or prototype new features without needing to fuly configure JIM with Connected Systems, Rules Extensions and wait for data to be imported and synchronised etc.
</p>

<div class="box mt-3">

    <div class="btn-group btn-group-sm" role="group" aria-label="Navigation options">
        <a class="btn btn-outline-secondary active" aria-current="page" href="/admin/example-data">Templates</a>
        <a class="btn btn-outline-secondary" href="/admin/example-data/datasets">Data Sets</a>
    </div>

    <p class="mt-3">
        Templates define example data to be created in JIM. They consist of one or more object types, with data sets being used to generate values for the object attributes.
    </p>

    <table class="table mt-2">
        <thead>
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Built-in?</th>
                <th scope="col">Created</th>
            </tr>
        </thead>
        <tbody>
            @if (templates != null)
            {
                foreach (var template in templates)
                {
                    <tr>
                        <td>
                            <a href="/admin/example-data/templates/@(template.Id)">@template.Name</a>
                        </td>
                        <td>@(template.BuiltIn ? "Yes" : "No")</td>
                        <td>@template.Created</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>



@code {
    private List<DataGenerationTemplateHeader>? templates;

    protected override async Task OnInitializedAsync()
    {
        templates = await Jim.DataGeneration.GetTemplateHeadersAsync();
    }
}